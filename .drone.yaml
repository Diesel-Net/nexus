---
kind: pipeline
type: docker
name: development pipeline

clone:
  depth: 1

steps:
  - name: Clean install (data is wiped)
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      playbook: .ansible/deploy.yaml
      galaxy: .ansible/roles/requirements.yaml
      inventory: .ansible/inventory/development/hosts
      extra_vars:
        - clean_install=yes
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

  - name: Configuration update (data is not wiped)
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      playbook: .ansible/deploy.yaml
      galaxy: .ansible/roles/requirements.yaml
      inventory: .ansible/inventory/development/hosts
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

trigger:
  branch:
    - development
  event:
    - push

---
kind: pipeline
type: docker
name: production pipeline

clone:
  depth: 1

steps:
  - name: Configuration update
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
      LDAP_ADMIN_PASSWORD:
        from_secret: ldap_admin_password
    settings:
      playbook: .ansible/deploy.yaml
      galaxy: .ansible/roles/requirements.yaml
      inventory: .ansible/inventory/production/hosts
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password
      extra_vars: version=production

trigger:
  branch:
    - stable
  event:
    - push
...
